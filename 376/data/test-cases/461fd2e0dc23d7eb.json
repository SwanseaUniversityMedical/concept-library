{"uid":"461fd2e0dc23d7eb","name":"test_anonymous_publication_presence","fullName":"clinicalcode.tests.functional_tests.test_detail_components.TestDetailComponents#test_anonymous_publication_presence","historyId":"48c9ff972ef0d3cb0d79ee20e75516ba","time":{"start":1751372339445,"stop":1751372339763,"duration":318},"status":"broken","statusMessage":"django.contrib.auth.models.Group.DoesNotExist: Group matching query does not exist.","statusTrace":"self = <test_detail_components.TestDetailComponents object at 0x7f6dbd183790>\nlive_server = <LiveServer listening at http://localhost:8080>\n\n    @pytest.mark.functional_test\n    def test_anonymous_publication_presence(self, live_server):\n>       self.driver.get(live_server + reverse('entity_detail_shortcut', kwargs={ 'pk' : 'PH1' }))\n                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nclinicalcode/tests/functional_tests/test_detail_components.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/django/urls/base.py:88: in reverse\n    return resolver._reverse_with_prefix(view, prefix, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/django/urls/resolvers.py:749: in _reverse_with_prefix\n    self._populate()\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/django/urls/resolvers.py:548: in _populate\n    for url_pattern in reversed(self.url_patterns):\n                                ^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/django/utils/functional.py:47: in __get__\n    res = instance.__dict__[self.name] = self.func(instance)\n                                         ^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/django/urls/resolvers.py:718: in url_patterns\n    patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\n                       ^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/django/utils/functional.py:47: in __get__\n    res = instance.__dict__[self.name] = self.func(instance)\n                                         ^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/django/urls/resolvers.py:711: in urlconf_module\n    return import_module(self.urlconf_name)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n<frozen importlib._bootstrap_external>:940: in exec_module\n    ???\n<frozen importlib._bootstrap>:241: in _call_with_frames_removed\n    ???\ncll/urls_brand.py:158: in <module>\n    url(r'^' + current_brand + '', include('clinicalcode.urls')),\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/django/urls/conf.py:39: in include\n    urlconf_module = import_module(urlconf_module)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/importlib/__init__.py:126: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1204: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1176: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1147: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:690: in _load_unlocked\n    ???\n<frozen importlib._bootstrap_external>:940: in exec_module\n    ???\n<frozen importlib._bootstrap>:241: in _call_with_frames_removed\n    ???\nclinicalcode/urls.py:14: in <module>\n    from clinicalcode.views.dashboard.targets import (\nclinicalcode/views/dashboard/targets/BrandTarget.py:9: in <module>\n    from .UserTarget import UserSerializer\nclinicalcode/views/dashboard/targets/UserTarget.py:30: in <module>\n    class UserSerializer(BaseSerializer):\nclinicalcode/views/dashboard/targets/UserTarget.py:34: in UserSerializer\n    MODERATOR_GROUP = Group.objects.get(name__iexact='Moderators')\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/django/db/models/manager.py:87: in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <QuerySet []>, args = (), kwargs = {'name__iexact': 'Moderators'}\nclone = <QuerySet []>, limit = 21, num = 0\n\n    def get(self, *args, **kwargs):\n        \"\"\"\n        Perform the query and return a single object matching the given\n        keyword arguments.\n        \"\"\"\n        if self.query.combinator and (args or kwargs):\n            raise NotSupportedError(\n                \"Calling QuerySet.get(...) with filters after %s() is not \"\n                \"supported.\" % self.query.combinator\n            )\n        clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)\n        if self.query.can_filter() and not self.query.distinct_fields:\n            clone = clone.order_by()\n        limit = None\n        if (\n            not clone.query.select_for_update\n            or connections[clone.db].features.supports_select_for_update_with_limit\n        ):\n            limit = MAX_GET_RESULTS\n            clone.query.set_limits(high=limit)\n        num = len(clone)\n        if num == 1:\n            return clone._result_cache[0]\n        if not num:\n>           raise self.model.DoesNotExist(\n                \"%s matching query does not exist.\" % self.model._meta.object_name\n            )\nE           django.contrib.auth.models.Group.DoesNotExist: Group matching query does not exist.\n\n/opt/hostedtoolcache/Python/3.11.12/x64/lib/python3.11/site-packages/django/db/models/query.py:649: DoesNotExist","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_fail_for_invalid_template_variable","time":{"start":1751372183775,"stop":1751372183776,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"django_test_environment","time":{"start":1751372183776,"stop":1751372183777,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"live_server","time":{"start":1751372183777,"stop":1751372183832,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"django_db_blocker","time":{"start":1751372183832,"stop":1751372183832,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_django_setup_unittest","time":{"start":1751372183833,"stop":1751372183834,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_webdriver","time":{"start":1751372183834,"stop":1751372185123,"duration":1289},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_dj_autoclear_mailbox","time":{"start":1751372185123,"stop":1751372185124,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_django_db_marker","time":{"start":1751372185124,"stop":1751372339433,"duration":154309},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_django_clear_site_cache","time":{"start":1751372185124,"stop":1751372185124,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"django_db_use_migrations","time":{"start":1751372185125,"stop":1751372185125,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"django_db_createdb","time":{"start":1751372185126,"stop":1751372185126,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"django_db_keepdb","time":{"start":1751372185126,"stop":1751372185126,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"django_db_modify_db_settings_tox_suffix","time":{"start":1751372185127,"stop":1751372185127,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"django_db_modify_db_settings_parallel_suffix","time":{"start":1751372185128,"stop":1751372185128,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"django_db_modify_db_settings_xdist_suffix","time":{"start":1751372185128,"stop":1751372185128,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"django_db_setup","time":{"start":1751372185129,"stop":1751372339431,"duration":154302},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"django_db_modify_db_settings","time":{"start":1751372185129,"stop":1751372185129,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_django_db_helper","time":{"start":1751372339432,"stop":1751372339433,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_django_set_urlconf","time":{"start":1751372339433,"stop":1751372339434,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"transactional_db","time":{"start":1751372339434,"stop":1751372339434,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_live_server_helper","time":{"start":1751372339434,"stop":1751372339437,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"monkeypatch","time":{"start":1751372339437,"stop":1751372339438,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"settings","time":{"start":1751372339438,"stop":1751372339439,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_template_string_if_invalid_marker","time":{"start":1751372339438,"stop":1751372339438,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"use_debug","time":{"start":1751372339439,"stop":1751372339439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"use_debug::0","time":{"start":1751372341546,"stop":1751372341546,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"settings::0","time":{"start":1751372341548,"stop":1751372341548,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"monkeypatch::0","time":{"start":1751372341550,"stop":1751372341551,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_live_server_helper::0","time":{"start":1751372341552,"stop":1751372341552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_django_set_urlconf::0","time":{"start":1751372341554,"stop":1751372341554,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_django_db_helper::0","time":{"start":1751372341557,"stop":1751372342195,"duration":638},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_webdriver::0","time":{"start":1751372342220,"stop":1751372342323,"duration":103},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_django_setup_unittest::0","time":{"start":1751372342325,"stop":1751372342325,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"django_db_setup::0","time":{"start":1751372585293,"stop":1751372585293,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"live_server::0","time":{"start":1751372585309,"stop":1751372585312,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"django_test_environment::0","time":{"start":1751372585314,"stop":1751372585314,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_fail_for_invalid_template_variable::0","time":{"start":1751372585317,"stop":1751372585317,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"functional_test"},{"name":"tag","value":"@pytest.mark.usefixtures('setup_webdriver')"},{"name":"tag","value":"django_db"},{"name":"parentSuite","value":"clinicalcode.tests.functional_tests"},{"name":"suite","value":"test_detail_components"},{"name":"subSuite","value":"TestDetailComponents"},{"name":"host","value":"heavy-4rqjz-kdt6c"},{"name":"thread","value":"3281-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"clinicalcode.tests.functional_tests.test_detail_components"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["functional_test","@pytest.mark.usefixtures('setup_webdriver')","django_db"]},"source":"461fd2e0dc23d7eb.json","parameterValues":[]}