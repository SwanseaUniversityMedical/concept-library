name: concept-library-test
services:
  postgres:
    build:
      context: ..
      dockerfile: ./postgres.Dockerfile
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ../development/db/:/docker-entrypoint-initdb.d/db/
    environment:
      POSTGRES_RESTORE_REPO: "github.com/SwanseaUniversityMedical/concept-library-dev-db.git"
      POSTGRES_HOST: "localhost"
      POSTGRES_DB: "concept_library"
      POSTGRES_USER: "clluser"
      POSTGRES_PASSWORD: "password"
      POSTGRES_PORT: 5432

  app:
    platform: linux/amd64
    build:
      context: ..
      dockerfile: ./app.Dockerfile
    command: >
      sh -c "/bin/wait-for-it.sh -t 0 postgres:5432 -- python /var/www/CodeListLibrary_project/manage.py makemigrations
      && /bin/init-app.sh"
    volumes:
      - ../../CodeListLibrary_project:/var/www/CodeListLibrary_project/
    ports:
      - "8000:8000"
      - "3000:3000"
    links:
      - postgres:postgres
    tty: true
    stdin_open: true
    env_file:
      - ./app.compose.env
    depends_on:
      - redis
      - postgres

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - .:/data

  celery_worker:
    build:
      context: ..
      dockerfile: ./app.Dockerfile
    command: >
      sh -c "/bin/wait-for-it.sh -t 0 postgres:5432
      && cd /var/www/CodeListLibrary_project/
      && celery -A cll worker -l INFO --purge"
    env_file:
      - ./app.compose.env
    volumes:
      - ../../CodeListLibrary_project:/var/www/CodeListLibrary_project/
    links:
      - postgres:postgres
    depends_on:
      - postgres
      - redis

  celery_beat:
    build:
      context: ..
      dockerfile: ./app.Dockerfile
    command: >
      sh -c "/bin/wait-for-it.sh -t 0 postgres:5432
      && cd /var/www/CodeListLibrary_project/
      && celery -A cll beat -l info --max-interval 300"
    env_file:
      - ./app.compose.env
    volumes:
      - ../../CodeListLibrary_project:/var/www/CodeListLibrary_project/
    links:
      - postgres:postgres
    depends_on:
      - postgres
      - redis
      - celery_worker
