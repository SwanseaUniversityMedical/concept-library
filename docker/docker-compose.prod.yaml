services:
  app:
    platform: linux/amd64
    image: cll/app
    restart: always
    stop_grace_period: ${CLL_GRACE_PERIOD:-3s}
    env_file: ./env_vars.txt
    command: >
      sh -c "/home/config_cll/init-app.sh"
    ports:
      - ${app_port:-8080}:80
    expose:
      - 80
      - 443
    networks:
      - backend
    volumes:
      - type: volume
        source: app-logs
        target: /home/config_cll/cll_srvr_logs
    healthcheck: &app-healtcheck
      test: ${CLL_WEB_PROD_HEALTHCHECK:-curl -f http://app:80/api/v1/health}
      interval: 60s
      timeout: 5s
      start_period: 5s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy

  redis:
    image: redis:7.0-bullseye
    container_name: redis
    restart: always
    stop_grace_period: ${CLL_GRACE_PERIOD:-3s}
    ports:
      - 6379:6379
    expose:
      - 6379
    networks:
      - backend
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
    healthcheck:
      test: redis-cli ping | grep PONG
      interval: 10s
      timeout: 5s
      retries: 3

  celery-worker:
    image: cll/celery_worker
    restart: always
    stop_grace_period: ${CLL_GRACE_PERIOD:-3s}
    env_file: ./env_vars.txt
    command: >
      sh -c "/home/config_cll/worker-start.sh"
    networks:
      - backend
    profiles:
      - live
    depends_on:
      app:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery-beat:
    image: cll/celery_beat
    restart: always
    stop_grace_period: ${CLL_GRACE_PERIOD:-3s}
    env_file: ./env_vars.txt
    command: >
      sh -c "/home/config_cll/beat-start.sh"
    networks:
      - backend
    profiles:
      - live
    depends_on:
      app:
        condition: service_healthy
      redis:
        condition: service_healthy
      celery-worker:
        condition: service_started

networks:
  backend:
    name: cllnet
    driver: bridge
    attachable: true
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: 127.0.0.1

volumes:
  app-logs:
    driver: local
    driver_opts:
      type: none
      device: ./cl_log
      o: bind
