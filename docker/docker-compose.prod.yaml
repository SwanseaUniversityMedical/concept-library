services:
  app:
    platform: linux/amd64
    container_name: ${cll_healthcheck_addr:-app}
    image: ${cll_app_image:-cll/app:latest}
    restart: always
    stop_grace_period: ${cll_grace_period:-3s}
    env_file: ./env_vars.txt
    command: >
      sh -c "/usr/bin/supervisord -c /etc/supervisord.conf"
    ports:
      - ${app_port:-80}:80
    expose:
      - 80
      - 443
    networks:
      - backend
    volumes:
      - type: volume
        source: app-logs
        target: /home/config_cll/cll_srvr_logs
    healthcheck:
      test: ["CMD-SHELL", "/home/config_cll/health/web-healthcheck.sh"]
      retries: 5
      timeout: 10s
      interval: 30s
      # When supported:
      # timeout: 10s
      # interval: 5m
      # start_period: 120s
      # start_interval: 10s
    depends_on:
      redis:
        condition: service_healthy
        required: false

  redis:
    image: ${redis_image:-redis:7.0-bullseye}
    container_name: redis
    restart: always
    stop_grace_period: ${cll_grace_period:-3s}
    command: >
      redis-server --requirepass ${redis_password:-someRedisPassword}
                   --appendonly no
                   --protected-mode no
                   --maxmemory 1gb
                   --maxmemory-policy allkeys-lru
    environment:
      REDIS_HOST: ${redis_host:-${REDIS_HOST:-redis}}
      REDIS_PORT: ${redis_port:-${REDIS_PORT:-6379}}
      REDIS_PASSWORD: ${redis_password:-someRedisPassword}
    ports:
      - ${redis_port:-${REDIS_PORT:-6379}}:${redis_port:-${REDIS_PORT:-6379}}
    expose:
      - ${redis_port:-${REDIS_PORT:-6379}}:${redis_port:-${REDIS_PORT:-6379}}
    networks:
      - backend
    profiles:
      - live
    healthcheck:
      test: redis-cli -u redis://default:${redis_password:-someRedisPassword}@${redis_host:-${REDIS_HOST:-redis}}:${redis_port:-${REDIS_PORT:-6379}}/0 ping | grep PONG
      retries: 5
      timeout: 10s
      interval: 10s
      # When supported:
      # timeout: 10s
      # interval: 5m
      # start_period: 120s
      # start_interval: 10s

networks:
  backend:
    name: ${cll_backend_name:-cllnet}
    driver: bridge
    attachable: true
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: ${cll_host_binding:-0.0.0.0}

volumes:
  app-logs:
    driver: local
    driver_opts:
      type: none
      device: ${cll_log_path:-./root/cl_log}
      o: bind
