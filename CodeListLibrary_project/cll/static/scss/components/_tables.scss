@import '../_methods';
@import '../_variables';
@import '../_media';
@import '../_utils';

/// Scrollbar base for datatables
///   @desc i.e. slim scrollbar

/* Webkit rules, see {@link "Scrollbar base for datatables"} */
@media screen and (-webkit-min-device-pixel-ratio:0) {
  .overflow-table-constraint {
    & > .datatable-container {
      &:not(.datatable-container--thick)::-webkit-scrollbar {
        width: var(--slim-scrollbar-width);
        height: var(--slim-scrollbar-width);
      }

      &--thick::-webkit-scrollbar {
        width: auto;
        height: auto;
      }
  
      &::-webkit-scrollbar-track {
        border-radius: var(--slim-scrollbar-radius);
        -webkit-border-radius: var(--slim-scrollbar-radius);
      }
      
      &::-webkit-scrollbar-thumb {
        background: var(--slim-scrollbar-inactive-color);
        border-radius: var(--slim-scrollbar-radius);
        -webkit-border-radius: var(--slim-scrollbar-radius);
      }
  
      &::-webkit-scrollbar-thumb:hover {
        background: var(--slim-scrollbar-active-color);
      }
      
      &::-webkit-scrollbar-thumb:window-inactive {
        background-color: col(clear);
      }
    }
  }
}

/* Moz rules, see {@link "Scrollbar base for datatables"} */
@-moz-document url-prefix() {
  .overflow-table-constraint {
    & > .datatable-container {
      &:not(.datatable-container--thick) {
        scrollbar-width: thin !important;
      }
  
      &--thick {
        scrollbar-width: auto;
      }
    }
  }
}

/// Contrained codelist table
///   @desc Used to constrain codelist tables in phenotype creation
.constrained-codelist-table {
  @include flex-col();
  position: relative;
  width: 100%;
	max-width: 100%;
  border: 1px solid col(accent-washed);
  overflow: hidden;

  &__wrapper {
    position: relative;
    width: 100%;
    padding: 0.5rem;
  }

  .overflow-table-constraint {
    padding: 0.5rem;
    position: relative;
    width: calc(100% - 1rem);
    max-width: 100%;
  }
}

/// Horizontal scrollable table
///   @desc Used for codelists in phenotype creation -> columns can be stickified
.h-scrollable-table {
  @include flex-col();
  
  position: relative;
  overflow: hidden;
  border: 1px solid col(accent-washed);
  max-width: 100%;
  max-height: 300px;

  &__wrapper {
    width: 100%;
    overflow: auto;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    border-spacing: 0;

    max-width: 100%;
    background-color: transparent;
    display: table;
    // margin-bottom: 20px;
  }

  th,
  td {
    border: 1px solid col(accent-washed);
    padding: 0.5rem 0.5rem;
    text-align: left;
    vertical-align: middle;
    white-space: nowrap;
    width: max-content;

    @include media("<desktop", "screen") {
      white-space: pre-wrap;
    }
  }

  td,
  tbody,
  tfoot {
    background: col(bg);
  }

  thead {
    background: col(accent-tertiary);
    
    &.primary-accent {
      background-color: col(accent-primary);
    }
    &.secondary-accent {
      background-color: col(accent-secondary);
    }
    &.tertiary-accent {
      background-color: col(accent-tertiary);
    }
    &.washed-accent {
      background-color: col(accent-washed);
    }
    &.bubble-accent {
      background-color: col(accent-bubble);
    }
  }

  th {
    background-color: inherit;
  }

  td.sticky {
    --column-offset: 0px;

    position: -webkit-sticky;
    position: sticky;
    left: var(--column-offset);
    z-index: 2;
  }
  
  th.sticky {
    --column-offset: 0px;
    position: -webkit-sticky;
    position: sticky;
    left: var(--column-offset);
    top: 0;
    z-index: 3;
  }

  tr.highlight-children {
    background-color: col(accent-washed);

    & > * {
      background-color: transparent;
    }
  }
}
