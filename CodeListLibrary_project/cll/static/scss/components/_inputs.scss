@use 'sass:color';
@import '../_methods';
@import '../_variables';
@import '../_media';
@import '../_utils';

/* Inputs
 *   @desc Defines all input-like elements and their assoc. containers for use across website
 *
 */

/// publication-list-group
///   @desc Defines the publication component controlled by publicationCreator.js
.publication-list-group {
  @include flex-col();
  position: relative;
  width: 100%;
  max-width: 100%;

  &__badge-annotation {
    float: right;
    margin-left: 1rem;
  }

  &__interface {
    display: flex;
    max-width: 100%;
    flex-flow: column nowrap;
    height: min-content;

    &-children {
      display: flex;
      flex-flow: row wrap;
      align-items: center;
      gap: 0.5rem;
      margin-bottom: 0.5rem;

      &--right {
        justify-content: flex-end;
      }

      input {
        flex: 1;
      }

      input:first-child {
        flex: 2;
      }

      button {
        margin-bottom: 0.25rem;
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
        font-weight: normal;
      }

      & > input.date-range-picker {
        min-width: 10ch;
      }

      &--references {
        & > button {
          margin-top: 2rem;

          @include media('<tablet', 'screen') {
            margin-top: 1rem;
          }
        }
      }
    }

    &-group {
      display: flex;
      flex-grow: 1;
      flex-flow: column nowrap;
      height: min-content;
      max-width: 100%;

      input,
      input:first-child {
        margin-right: 2rem;
      }
    }

    &__trial {
      &-children {
        display: flex;
        flex-flow: row wrap;
        align-items: center;

        &--right {
          justify-content: flex-end;
        }

        input {
          flex: 1;
          margin-right: 0.25rem;
        }

        button {
          padding-top: 0.5rem;
          padding-bottom: 0.5rem;
          font-weight: normal;
          margin-bottom: 0.25rem;
        }
      }
    }
  }

  &__none-available {
    padding: 1rem;
    border-radius: 0.1rem;
    background-color: col(accent-semi-transparent);
    margin-bottom: 0.5rem;

    &-message {
      text-align: center;
    }

    &:not(.show) {
      display: none;
    }
  }

  &__list {
    @include flex-col();
    flex-wrap: nowrap;
    position: relative;
    width: 100%;
    max-width: 100%;
    margin-top: 1rem;

    &.mg-sm {
      margin-top: 0rem;
    }

    &-detail-title {
      color: col(text-darkest);
      border-bottom: 0;
      font-size: 18px;
      font-weight: bold;
      line-height: 1;
    }

    &-header {
      width: 100%;
      border-bottom: 1px solid col(accent-dark);

      h3 {
        padding: 0;
        margin: 0 0 0.25rem 0;
      }
    }

    &-container {
      @include flex-col();
      align-self: center;
      flex-wrap: nowrap;
      position: relative;
      width: calc(100% - 0.5rem);
      max-width: calc(100% - 0.5rem);
      margin-top: 1rem;
      max-height: 200px;
      overflow-y: auto;
      overflow-x: none;
      padding: 0.5rem;
    }

    &-item {
      @include flex-row(0.5rem, false);
      max-width: calc(100% - 0.5rem);
      align-items: center;
      justify-content: space-between;
      padding: 0.5rem 0;

      & p {
        margin: 0;
      }

      &--is-primary {
        display: inline-block;
        width: var(--icons-size);
        height: var(--icons-size);
        margin-right: 1ch;

        &:before {
          content: '\f005';
          cursor: inherit;
          pointer-events: inherit;
          position: absolute;
          height: 100%;
          aspect-ratio: 1 / 1;
          font-family: var(--icons-name);
          font-style: var(--icons-style);
          font-size: var(--icons-size);
          text-align: center;
          color: col(accent-tertiary);
        }
      }

      &-id,
      &-url {
        display: flex;
        vertical-align: middle;
        flex: 1;
        max-width: 100%;

        @include media("<desktop", "screen") {
          max-width: 175px;
        }

        @include media("<tablet", "screen") {
          max-width: 125px;
        }

        @include media("<=phone", "screen") {
          max-width: 100px;
        }

        & p {
          text-wrap: wrap;
          word-wrap: break-word;
          max-width: 100%;
        }

        & a {
          text-wrap: wrap;
          word-wrap: break-word;
          max-width: 100%;

          &[data-shrinkcontent="true"] {
            display: block;
            max-width: 10em;

            &::after {
              --shrink-replacement: "Link";

              display: -webkit-box;
              content: attr(href);
              max-width: 10em;
              line-clamp: 2;
              -webkit-line-clamp: 2;
              -moz-box-orient: vertical;
              -webkit-box-orient: vertical;
              overflow: hidden;
              text-overflow: ellipsis;

              @include media("<tablet", "screen") {
                content: var(--shrink-replacement);
              }
            }

            &:not([data-shrinkreplace=""])::after {
              --shrink-replacement: attr(data-shrinkreplace);
            }
          }
        }
      }

      &-primary {
        flex: 1;
        max-width: 100%;

        &:empty {
          flex: 0;
        }
      }

      &-names {
        flex: 1;
        max-width: 100%;

        & p {
          text-wrap: wrap;
          word-wrap: break-word;
          max-width: 100%;
        }

        & a {
          text-wrap: wrap;
          word-wrap: break-word;
          max-width: 100%;
        }
      }

      &-bhfdate {
        display: block;
        flex: 0.5;
        min-width: fit-content;
        max-width: 100%;

        & > p {
          display: block;
          width: fit-content;
          max-width: calc(100% - 0.5em);
          margin: 0;
          margin-left: auto;
          margin-right: auto;
          padding: 0 0.5em;
          border-bottom: 5px dotted col(accent-tertiary);
        }

        @include media("<tablet", "screen") {
          flex: 1;
          min-width: 100%;
          text-align: left;

          & > p {
            width: fit-content;
            margin: 0;
          }
        }
      }

      &-id,
      &-url,
      &-names {
        @include media("<tablet", "screen") {
          flex: 1;
          min-width: 100%;

          & p {
            width: fit-content;
          }

          & a:not([data-shrinkcontent]) {
            width: fit-content;
          }
        }
      }

      &-id {
        word-break: break-all;
      }

      &-btn {
        @include flex-row();
        @include prefix(transition, all 250ms ease, webkit moz o ms);
        cursor: pointer;
        pointer-events: auto;
        flex-wrap: nowrap;
        width: fit-content;
        height: fit-content;
        padding: 0.5rem 0.5rem;
        margin-right: 0.25rem;
        vertical-align: middle;
        align-items: center;
        justify-content: space-evenly;
        color: col(text-brightest);
        background-color: col(accent-danger);
        border-radius: 0.25rem;
        border: none;
        outline: none;

        @include media("<tablet", "screen") {
          margin-left: auto;
        }

        & > span {
          font-weight: bold;
          pointer-events: none;
        }
        
        & > .delete-icon {
          pointer-events: none;
          margin-right: 0.5rem;
          &:after {
            content: '\f057';
            pointer-events: none;
            aspect-ratio: 1 / 1;
            font-family: var(--icons-name);
            font-style: var(--icons-style);
            font-size: var(--icons-size);
            color: col(accent-brightest);
            text-align: center;
          }
        }

        &:disabled {
          opacity: 0.5;
        }

        &:focus-visible {
          outline: 1px solid col(accent-dark);
          border-radius: 2pt;
        }

        &:focus {
          outline: none;
          border-radius: 0.25rem;
        }

        &:hover {
          @include prefix(filter, brightness(80%), webkit moz o ms);
        }

        &:active {
          @include prefix(transform, scale(0.95), webkit moz o ms);
        }
      }

      &:not(:last-child) {
        border-bottom: 1px solid col(accent-washed);
      }
    }

    &:not(.show) {
      display: none;
    }
  }
}

/// ontology-modal-body
///   @desc Defines the ontology modal body panel(s)
.ontology-modal-body {
  display: flex;
  flex-flow: column nowrap;
  height: max-content;
  width: 100%;
  overflow-x: hidden;
  overflow-y: auto;

  @include media('>=tablet', 'screen') {
    display: grid;
    grid-auto-rows: 1fr;
    grid-template-columns: 1fr 2fr 1fr;
    overflow-y: hidden;
  }

  &__header {
    @include flex-col();
    @include bottom-divider($size_pad: false, $border_col: col(accent-washed));
    height: auto;
    width: auto;
    padding: 0.5rem;
    margin-bottom: 0.5rem;

    & h4 {
      padding: 0;
      margin: 0;
      font-size: 18px;
      font-weight: bold;
      line-height: 1;
      color: col(text-darkest);
    }

    & p {
      padding: 0;
      margin: 0.5rem 0 0 0;
    }

    &--action-header {
      @include flex-row();
      justify-content: space-between;
    }

    &-actions {
      @include flex-row($gap: 1rem);
      margin-left: auto;

      & > p {
        margin: 0 0.5rem 0 0;
      }

      &-deselector {
        &:after {
          @include fontawesome-icon();
          content: '\f2d3';
          color: col(accent-danger);
        }

        &[disabled="true"]:after {
          color: col(accent-washed) !important;
        }
      }

      @include media('<tablet', 'screen') {
        & > p {
          display: none;
        }
      }
    }
  }

  &__window {
    display: flex;
    flex-flow: column nowrap;
    width: auto;
    flex-grow: 1;
    height: max-content;
    max-height: max-content;
    overflow-y: auto;
    padding: 0 0.5rem;

    &--max-vh {
      max-height: 20vh;
    }

    @include media('>=tablet', 'screen') {
      height: auto;
      max-height: 100%;
      overflow-y: auto;
    }
  }

  &__section {
    display: flex;
    flex-flow: column nowrap;
    width: auto;
    height: fit-content;
    max-height: 100%;
    overflow-y: unset;
    padding: 0.5rem 0;

    @include media('>=tablet', 'screen') {
      height: auto;
      overflow-y: hidden;
      min-width: 175px;
    }

    &--flex-order-0-0 {
      order: 0;

      @include media('<tablet', 'screen') {
        order: 0;
      }
    }

    &--flex-order-1-2 {
      order: 1;

      @include media('<tablet', 'screen') {
        order: 2;
      }
    }

    &--flex-order-2-1 {
      order: 2;

      @include media('<tablet', 'screen') {
        order: 1;
      }
    }
  }

  &__layout {
    display: flex;
    flex-flow: column nowrap;
    flex-grow: 1;
    width: auto;
    height: auto;
    max-height: 100%;
    overflow-y: auto;

    @include media('<tablet', 'screen') {
      flex-flow: row wrap;
      width: auto;
      height: max-content;
      max-height: max-content;
      align-items: stretch;
      justify-items: center;
      overflow-y: auto;
    }
  }

  &__selector {
    @include flex-row($gap: 0);
    align-items: center;
    padding: 0.5rem 0.5rem 0.5rem 0.5rem;
    color: col(text-dark);

    &:not(:only-child) {
      &:nth-child(odd) {
        background-color: var(--item-list-odd-bg-color);
      }
  
      &:nth-child(even) {
        background-color: var(--item-list-even-bg-color);
      }
    }

    &__name {
      @include clear-anchor();
      font-weight: bold;
    }

    &.active {
      color: col(text-darkest);
      font-weight: bold;
      background-color: col(accent-bubble) !important;
    }
  }

  &__list {
    @include flex-col($gap: 0);
    width: auto;
    height: fit-content;
    flex-grow: 1;
    max-height: calc(100% - 0.5rem);
    max-width: 100%;
    padding-top: 0.5rem;

    &:not(.show) {
      display: none;
    }

    .vl-scrolling-frame {
      flex-grow: 1;
    }

    &-item {
      cursor: default;
      display: grid;
      grid-auto-rows: 1fr;
      grid-template-columns: auto 2rem;
      position: relative;
      color: col(text-darkest);
      padding: 0.5rem 0.25rem 0.5rem 0.5rem;
      width: auto;
      height: fit-content;
      box-sizing: border-box;
      max-height: max-content;
      max-width: 100%;
      align-items: center;

      &:not(:only-child) {
        &:nth-child(odd) {
          background-color: var(--item-list-odd-bg-color);
        }
    
        &:nth-child(even) {
          background-color: var(--item-list-even-bg-color);
        }
      }

      &-label {
        font-weight: normal;
        white-space: break-spaces;
        text-overflow: ellipsis;
        overflow: hidden;
        padding: 0;
        margin: 0;
        max-height: max-content;
      }

      &-actions {
        @include flex-row($gap: 1rem);
        cursor: pointer;
        pointer-events: auto;
        margin-left: auto;

        &--delete-icon:after {
          @include fontawesome-icon();
          content: '\f1f8';
          color: col(accent-danger);
        }
      }
    }
  }

  &__none-available {
    display: flex;
    flex-flow: row;
    flex-grow: 1;
    padding: 1rem;
    border-radius: 0.1rem;
    background-color: col(accent-semi-transparent);
    margin-bottom: 0.5rem;
    align-items: center;
    justify-content: center;

    &-message {
      text-align: center;
      height: fit-content;
    }

    &:not(.show) {
      display: none;
    }

    @include media('>=tablet', 'screen') {
      overflow-x: hidden;
      overflow-y: hidden;
    }
  }

  &--constrained {
    max-height: 60vh;

    @include media('<desktop', 'screen') {
      max-height: 50vh;
    }
  }
}

/// ontology-group
///   @desc Defines the ontology creator display form within create page
.ontology-group-creator {
  @include flex-col();
  position: relative;
  width: 100%;
  max-width: 100%;

  &__header {
    display: flex;
    flex-flow: row wrap;
    width: 100%;
    height: min-content;
    max-width: 100%;
    justify-content: space-between;
    align-items: flex-end;

    & > p {
      display: block;
      flex: 1;
      max-width: 100%;
    }

    &-actions {
      display: flex;
      flex: 1;
      flex-flow: row nowrap;
      justify-content: flex-end;

      button {
        font-weight: normal;
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
        margin-bottom: 0.25rem;
        margin-left: auto;
      }
    }

    @include media('<tablet', 'screen') {
      & > p {
        width: 100%;
        flex: unset;
      }
  
      &-actions {
        width: 100%;
        flex: unset;
      }
    }
  }

  &__none-available {
    padding: 1rem;
    border-radius: 0.1rem;
    background-color: col(accent-semi-transparent);
    margin-bottom: 0.5rem;

    &-message {
      text-align: center;
    }

    &:not(.show) {
      display: none;
    }
  }

  &__list {
    @include flex-col();
    flex-wrap: nowrap;
    position: relative;
    width: 100%;
    max-width: 100%;
    margin-top: 1rem;

    &-header {
      width: 100%;
      border-bottom: 1px solid col(accent-dark);

      h3 {
        padding: 0;
        margin: 0 0 0.25rem 0;
      }
    }

    &-container {
      @include flex-col();
      position: relative;
      flex-wrap: nowrap;
      align-self: center;
      padding: 0.5rem;
      margin-top: 1rem;
      width: calc(100% - 0.5rem);
      max-width: calc(100% - 0.5rem);
      max-height: 200px;
      overflow-y: auto;
      overflow-x: none;
    }

    &:not(.show) {
      display: none;
    }

    &-group {
      @include flex-col($gap: 0);
      color: col(text-dark);

      &-title {
        padding: 0;
        margin: 0.5rem 0 0.5rem 0;
        font-size: 14px;
        font-weight: bold;
        line-height: 1;
      }
    
      &-description {
        margin: 0;
        font-size: 12px;
      }
    }

    &-item {
      cursor: default;
      display: flex;
      flex-flow: row wrap;
      gap: 1rem;
      justify-content: space-between;
      position: relative;
      color: col(text-darkest);
      padding: 0.5rem 0.25rem 0.5rem 0.5rem;
      width: auto;
      height: fit-content;
      box-sizing: border-box;
      max-height: max-content;
      max-width: 100%;
      align-items: flex-start;

      &:not(:only-child) {
        &:nth-child(odd) {
          background-color: var(--item-list-odd-bg-color);
        }
    
        &:nth-child(even) {
          background-color: var(--item-list-even-bg-color);
        }
      }

      &-label {
        font-weight: normal;
        white-space: break-spaces;
        padding: 0;
        margin: 0;
        max-height: max-content;
      }

      &-source {
        font-weight: normal;
        white-space: break-spaces;
        text-align: right;
        overflow: hidden;
        padding: 0;
        margin: 0;
        min-width: fit-content;
        max-height: max-content;
      }
    }
  }
}

// detailed-input-group
//  @desc defines a group of one or more inputs, and allows the addition of other
//        elements, e.g. a title/description/mandatory status, to communicate its
//        use to the user
.detailed-input-group {
  @include flex-col();

  max-width: 100%;
  font-family: inherit;
  margin: 1rem 0 0 0;

  &.no-margin {
    margin: 0;
  }

  &.fill {
    width: 100%;
    max-width: 100%;
  }

  &.constrained {
    max-width: 100%;
  }

  &__mandatory {
    float: right;
    color: col(text-danger);
    font-weight: bold;

    &.hidden {
      display: none;
    }
  }

  &__title {
    max-width: 100%;
    padding: 0;
    margin: 0 0 0.5rem 0;
    font-size: 18px;
    font-weight: bold;
    line-height: 1;
    color: col(text-darkest);

    &.sm {
      font-size: 16px;
    }
  }

  &__description {
    font-family: inherit;
    max-width: 100%;
    margin: 0 0 0.5rem 0;
    font-size: 14px;
    text-wrap: wrap;
  }

  &__error {
    margin: 0 0 0.5rem 0;
    font-size: 14px;
    color: col(text-danger);
  }

  &__header {
    @include flex-row();
    max-width: 100%;
    align-items: center;
    justify-content: space-between;

    &--nowrap {
      flex-wrap: nowrap;
    }
  }

  &__header-item {
    @include flex-col();
    max-width: 100%;
  }

  &__none-available {
    display: block;
    max-width: calc(100% - 1rem);
    padding: 1rem;
    border-radius: 0.1rem;
    background-color: col(accent-semi-transparent);
    margin-bottom: 0.5rem;

    &-message {
      text-align: center;
    }

    &:not(.show) {
      display: none;
    }
  }
}

// date-range-field
//  @desc describes a date range field, where each input describes either the start or end of the date
.date-range-field {
  display: flex;
  flex-flow: row nowrap;
  padding: 0;
  margin: 0;
  border: 0;
  width: 100%;

  &--wrapped {
    flex-wrap: wrap;
    max-width: 100%;

    @include media('<tablet', 'screen') {display: grid;
      grid: 1fr 1fr / 1fr 1fr;
      gap: 0.5rem 0.25rem;
      justify-items: safe;

      & > .date-range-field__label {
        margin-left: 0 !important;
        margin-right: 0 !important;
      }
    }
  }

  &--padding0_5 {
    padding: 0 0.5rem;
    max-width: calc(100% - 0.5rem);
  }

  &__label {
    display: flex;
    margin-right: 0.5rem;

    &:last-of-type {
      margin-left: 0.5rem;
    }
  }
}

// radio-chips-group
//  @desc describes a group of radio chips
.radio-chips-group {
  @include flex-row($gap: 0.5rem);

  margin: 0;
  padding: 0;
  list-style-type: none;
}

// hstack-checkbox-group
//  @desc defines a horizontal stack of checkboxes
.hstack-checkbox-group {
  @include flex-row();
  @include remove-appearance();

  border: none;
  position: relative;
  margin: 0.5rem 0;
  min-height: 20px;
  align-items: center;

  &__title {
    margin: 0 0.5rem 0 0;
  }

  &--hang-right {
    justify-content: flex-end;

    @include media('<tablet', 'screen') {
      justify-content: flex-start;
      width: 100%;
    }
  }
}

// hstack-radio-group
//  @desc defines a horizontal stack of radio inputs
.hstack-radio-group {
  @include flex-row();
  @include remove-appearance();
  
  border: none;
  position: relative;
  align-items: center;

  &__title {
    margin: 0.5rem 0.5rem 0 0
  }

  &--hang-right {
    justify-content: flex-end;

    @include media('<tablet', 'screen') {
      justify-content: flex-start;
      width: 100%;
    }
  }
}

// checkbox-item-container
//  @desc defines a horizontal group of checkbox items
.checkbox-item-container {
  display: flex;
  flex-flow: row nowrap;
  width: 100%;
  overflow: hidden;
  margin-bottom: 0.5rem;
  
  &.min-size {
    max-width: fit-content;
    margin-right: 0.5rem;
  }

  &.ignore-overflow {
    overflow: visible;
  }
}

// search-options
//  @desc defines a set of search options, example in create/concept.html
.search-options {
  @include flex-row();
  position: relative;
  padding: 0;
  margin: 0 0 1rem 0;
  border: 0;
  outline: none;
  width: 100%;
  height: fit-content;
  gap: 1rem;

  &__title {
    padding: 0;
    margin: 0 0.25rem 0 0rem;
  }

  &__container {
    @include flex-row();
    justify-content: flex-end;
    align-items: center;
    width: fit-content;
    height: fit-content;
    gap: 0.5rem;
    margin: 0;
    padding: 0;
  }
  
  &__input {
    display: none;
  }

  &__label {
    --current-color: var(--color-bg);
    --hover-color: var(--color-accent-bubble);

    cursor: pointer;
    display: inline-block;
    border-radius: 0.25rem;
    padding: 0.2rem 0.5rem 0.2rem 2rem;
    background-color: var(--current-color);
  }

  &__input + &__label {
    @include prefix(user-select, none, moz webkit o ms);
    @include prefix(transition, all 150ms ease, moz webkit o ms);

    border: 1px solid col(accent-washed);

    &:hover {
      background-color: var(--hover-color);
      border: 1px solid transparent;
    }

    .search-options__label-icon:before {
      content: '\f00d';
      cursor: pointer;
      position: absolute;
      pointer-events: auto;
      height: 100%;
      top: 0;
      right: 0.5rem;
      aspect-ratio: 1 / 1;
      font-family: var(--icons-name);
      font-style: var(--icons-style);
      font-size: var(--icons-size);
      text-align: center;
    }
  }

  &__input:checked + &__label {
    @include prefix(transition, all 150ms ease, moz webkit o ms);
    --current-color: var(--color-accent-bubble);
    --hover-color: var(--color-bg);
    border: 1px solid transparent;

    &:hover {
      background-color: var(--hover-color);
      border: 1px solid col(accent-washed);
    }

    .search-options__label-icon:before {
      content: '\f00c';
      cursor: pointer;
      position: absolute;
      pointer-events: auto;
      height: 100%;
      top: 0;
      right: 0.5rem;
      aspect-ratio: 1 / 1;
      font-family: var(--icons-name);
      font-style: var(--icons-style);
      font-size: var(--icons-size);
      text-align: center;
    }
  }

  &__input[data-target="wildcard"]:not(:checked) ~ &__label[data-follows="wildcard"] {
    @include prefix(user-select, none, moz webkit o ms);
    @include prefix(transition, all 150ms ease, moz webkit o ms);
    --current-color: var(--color-bg);
    --hover-color: var(--color-accent-bubble);

    border: 1px solid col(accent-washed);

    &:hover {
      background-color: var(--hover-color);
      border: 1px solid transparent;
    }

    .search-options__label-icon:before {
      content: '\f00d';
      cursor: pointer;
      position: absolute;
      pointer-events: auto;
      height: 100%;
      top: 0;
      right: 0.5rem;
      aspect-ratio: 1 / 1;
      font-family: var(--icons-name);
      font-style: var(--icons-style);
      font-size: var(--icons-size);
      text-align: center;
    }
  }
}

// search-container
//  @desc defines a search input field
.search-container {
  @include flex-col();
  position: relative;
  padding: 0;
  margin: 0;
  border: 0;
  width: 100%;
  height: fit-content;

  &__field {
    @include box-shadow(0px, 8px, 15px, var(--search-shadow-inactive-color));
    box-sizing: border-box;
    position: relative;
    border: 0;
    margin: 0;
    width: 100%;
    padding: 0.5rem 40px 0.5rem 1rem;
    border-radius: 0.2rem;
    transition: all 250ms ease;

    &:focus {
      @include box-shadow(0px, 10px, 20px, var(--search-shadow-active-color));
      outline: none;
      border-radius: 0.2rem;
    }

    &:focus-visible {
      @include box-shadow(0px, 10px, 20px, var(--search-shadow-active-color));
      outline: none;
      border-radius: 0.2rem;
    }

    &:disabled {
      opacity: 0.5;
    }

    /* Outline */
    &.primary-outline {
      border-width: 1px;
      border-style: solid;
      border-color: col(accent-primary);
    }
    &.secondary-outline {
      border-width: 1px;
      border-style: solid;
      border-color: col(accent-secondary);
    }
    &.tertiary-outline {
      border-width: 1px;
      border-style: solid;
      border-color: col(accent-tertiary);
    }
    &.washed-outline {
      border-width: 1px;
      border-style: solid;
      border-color: col(accent-washed);
    }
    &.bubble-outline {
      border-width: 1px;
      border-style: solid;
      border-color: col(accent-bubble);
    }
    &.dark-outline {
      border-width: 1px;
      border-style: solid;
      border-color: col(accent-dark);
    }
    &.bright-outline {
      border-width: 1px;
      border-style: solid;
      border-color: col(accent-bright);
    }
  }

  &__icon {
    all: unset;
    cursor: pointer;
    display: block;
    position: absolute;
    right: 10px;
    top: 27.25%;
    width: 20px;
    height: 20px;

    &:after {
      @include fontawesome-icon();
      content: '\f002';
      display: block;
      top: 0;
      width: 100%;
      height: 100%;
      position: absolute;
      color: var(--color-accent-primary);
    }

    &:focus-visible {
      outline: 1px solid col(accent-dark);
      border-radius: 2pt;
    }
  }

  &__icon-landing {
    all: unset;
    cursor: pointer;
    display: block;
    position: absolute;
    right: 10px;
    top: 27.25%;
    width: 20px;
    height: 20px;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 56.966 56.966' fill='%23687FCB'%3e%3cpath d='M55.146 51.887L41.588 37.786A22.926 22.926 0 0046.984 23c0-12.682-10.318-23-23-23s-23 10.318-23 23 10.318 23 23 23c4.761 0 9.298-1.436 13.177-4.162l13.661 14.208c.571.593 1.339.92 2.162.92.779 0 1.518-.297 2.079-.837a3.004 3.004 0 00.083-4.242zM23.984 6c9.374 0 17 7.626 17 17s-7.626 17-17 17-17-7.626-17-17 7.626-17 17-17z'/%3e%3c/svg%3e");
    background-size: 20px;
    background-repeat: no-repeat;
    background-position: 50%, 50%;

    &:focus-visible {
      outline: 1px solid col(accent-dark);
      border-radius: 2pt;
    }
  }
}

// date-range-picker
//  @desc defines a date range picker for use with lightpick.js
.date-range-picker {
  @include remove-appearance();

  outline: none;
  width: 100%;
  font-family: inherit;
  margin-top: 0.25rem;
  margin-bottom: 0.5rem;
  resize: none;
  border: 1px solid col(accent-dark);
  border-radius: 2px;
  padding: 0.5rem;
  transition: border-color 250ms ease;

  &:focus {
    outline: none;
    border-color: col(accent-washed);
  }

  &:disabled {
    opacity: 0.5;
  }
}

// text inputs
//  @desc defines a set of text inputs
.code-text-input,
.text-input,
.text-area-input {
  @include remove-appearance();

  font-family: inherit;
  margin-top: 0.25rem;
  margin-bottom: 0.5rem;
  resize: none;
  border: 1px solid col(accent-dark);
  border-radius: 2px;
  padding: 0.5rem;
  width: auto;
  max-width: calc(100% - 1rem);
  transition: border-color 250ms ease;

  &--bbox-size {
    box-sizing: border-box;
  }

  &:focus {
    outline: none;
    border-color: col(accent-dark);
  }

  &:disabled {
    opacity: 0.5;
  }
}

// code inputs
//  @desc defines a set of input elements for code search
.code-search-group {
  @include flex-col();
  position: relative;
  padding: 0;
  margin: 0;
  border: 0;
  width: 100%;
  height: fit-content;

  &.indented {
    padding: 0 0 0 0.5rem;
  }

  &.scrollable {
    max-height: 45vh;
    overflow-y: auto;
    overflow-x: hidden;
    flex-wrap: nowrap;
  }
}

.code-text-input {
  padding-right: 32px;

  &:disabled ~ &__icon {
    display: none;
  }

  & ~ &__icon {
    cursor: pointer;
    display: block;
    position: absolute;
    right: 5px;
    top: 20%;
    height: 55%;
    aspect-ratio: 1 / 1;
    
    &:after {
      @include fontawesome-icon();
      content: '\f002';
      display: block;
      top: 0;
      width: 100%;
      height: 100%;
      position: absolute;
      color: var(--color-accent-primary);
    }
  }
}

// text-area-input
//  @desc defines an area for text input
.text-area-input {
  resize: vertical;

  &.simple {
    @include remove-appearance();
  
    font-family: inherit;
    margin-top: 0.25rem;
    margin-bottom: 0.5rem;
    border: 1px solid col(accent-dark);
    border-radius: 2px;
    padding: 0.5rem;
    width: auto;
    transition: border-color 250ms ease;
  }
}

// selection inputs
//  @desc defines a group of selection inputs for radio buttons, checkboxes, dropdown etc
.selection-input {
  font-family: inherit;
  margin-top: 0.25rem;
  margin-bottom: 0.5rem;
  resize: none;
  border: 1px solid col(accent-dark);
  border-radius: 2px;
  padding: 0.5rem;
  min-width: auto;
  width: fit-content;
  max-width: 100%;
  transition: border-color 250ms ease;

  &:focus {
    outline: none;
    border-color: col(accent-dark);
  }

  &:disabled {
    opacity: 0.5;
  }

  &:focus-visible {
    outline: 1px solid col(accent-dark);
    border-radius: 2pt;
  }
}

.radio-input[type="radio"] {
  @include remove-appearance();
  font-family: inherit;

  &:checked, &:not(:checked) {
    position: absolute;
    left: -9999px;
  }

  &:checked + label, &:not(:checked) + label {
    cursor: pointer;
    display: inline-block;
    line-height: 20px;
    padding-left: 28px;
    margin: 0.5rem 0.5rem 0 0;
    color: col(text-darker);
  }

  &:checked + label:before, &:not(:checked) + label:before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    width: 18px;
    height: 18px;
    border: 1px solid col(accent-washed);
    border-radius: 100%;
    background: col(bg);
  }

  &:checked + label:after, &:not(:checked) + label:after {
    content: '';
    position: absolute;
    width: 12px;
    height: 12px;
    background: col(accent-primary);
    top: 4px;
    left: 4px;
    border-radius: 100%;
    transition: all 250ms ease;
  }

  &:not(:checked) + label:after {
    opacity: 0;
    transform: scale(0);
    -webkit-transform: scale(0);
  }

  &:checked + label:after {
    opacity: 1;
    transform: scale(1);
    -webkit-transform: scale(1);
  }

  &:hover + label:before {
    transform: scale(1.15);
    -webkit-transform: scale(1.15);
  }

  &:active + label:before {
    transform: scale(0.9);
    -webkit-transform: scale(0.9);
  }

  &:focus-visible + label {
    outline: 1px solid col(accent-dark);
    border-radius: 2pt;
  }

  &:disabled + label {
    opacity: 0.5;
  }
}

.checkbox-item[type="checkbox"] {
  --background-accent: var(--color-accent-bright);
  --active-accent: var(--color-accent-primary);
  --icon-accent: var(--color-accent-bright);
  --border-accent: var(--color-accent-washed);
  --hover-border-accent: var(--color-accent-primary);
  --disabled-bg-accent: var(--checkbox-bg-disabled-color);
  --disabled-icon-accent: var(--checkbox-icon-disabled-color);

  @include prefix(appearance, none, webkit moz o);
  @include prefix(transition, all 250ms ease-in-out, webkit moz o);
  cursor: pointer;
  display: block;
  height: 18px;
  width: 18px;
  outline: none;
  border-radius: 0.2rem;
  margin: 0;
  padding: 0;
  border: 1px solid var(--border-color, var(--border-accent));
  background: var(--bg-color, var(--background-accent));
  box-sizing: inherit;

  &:focus-visible + label {
    outline: 1px solid col(accent-dark);
    border-radius: 2pt;
  }

  &:after {
    @include prefix(transform, rotate(40deg), webkit moz o);
    @include prefix(transition, all 250ms ease-in-out, webkit moz o);
    content: '';
    display: block;
    position: absolute;
    width: 5px;
    height: 9px;
    border: 2px solid var(--icon-accent);
    border-top: 0;
    border-left: 0;
    left: 6px;
    top: 2px;
    box-sizing: inherit;
  }

  &:before {
    box-sizing: inherit;
  }

  &:checked {
    --bg-color: var(--active-accent);
    --border-color: var(--hover-border-accent);
  }

  &:disabled {
    --bg-color: var(--disabled-bg-accent);
    cursor: not-allowed;

    &:checked {
      --bg-color: var(--disabled-bg-accent);
      --border-color: var(--border-accent);
    }

    & + label {
      cursor: not-allowed;
    }
  }

  &:hover {
    &:not(:checked):not(:disabled) {
      --border-color: var(--hover-border-accent);
    }
  }

  & + label {
    cursor: pointer;
    display: inline-block;
    vertical-align: top;
    line-height: 21px;
    margin-left: 0.5rem;
  }
}

.checkbox-input[type="checkbox"] {
  @include remove-appearance();

  &:not(:checked), &:checked {
    position: absolute;
    left: 0;
  }

  &:not(:checked) + label, &:checked + label {
    cursor: pointer;
    position: relative;
    line-height: 20px;
    padding-left: 28px;
  }

  &:not(:checked) + label:before, &:checked + label:before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    width: 18px;
    height: 18px;
    border: 1px solid col(accent-washed);
    background: col(bg);
    border-radius: 0.2rem;
    transition: all 250ms ease;
  }

  &:not(:checked) + label:after, &:checked + label:after {
    @include fontawesome-icon();

    content: '\f00c';
    position: absolute;
    top: 9px;
    left: 3px;
    color: col(accent-primary);
    line-height: 0;
    transition: all 250ms ease;
  }

  &:not(:checked):not(:disabled):focus + label:after,
  &:not(:checked) + label:after {
    opacity: 0;
    transform: scale(0);
  }

  &:not(:disabled):checked:focus + label:after,
  &:checked + label:after {
    opacity: 1;
    transform: scale(1);
  }

  &:not(:disabled):active + label:after {
    opacity: 1;
    transform: scale(1.5);
  }

  &:disabled:not(:checked) + label:before,
  &:disabled:checked + label:before {
    box-shadow: none;
    border-color: col(accent-washed);
    background-color: col(accent-washed);
  }

  &:disabled:checked + label:after {
    box-shadow: none;
    border-color: col(accent-washed);
    background-color: col(accent-washed);
  }

  &:disabled + label {
    opacity: 0.5;
    color: col(text-darker);
  }
}

// switch inputs
//  @desc defines a switch, similar in function to a radiobutton, to describe a binary state
.switch-input {
  display: none;

  &:checked + .switch {
    background-color: var(--switch-bg-active-color);
    border-color: var(--switch-bg-active-color);
  }

  &:checked + .switch::before {
    left: 100%;
    transform: translateX(-100%);
  }

  &:disabled + .switch {
    opacity: 0.5;
  }
}

.switch {
  --switch-width: var(--switch-size);
  --switch-height: calc(var(--switch-width) / 2);
  --switch-border: calc(var(--switch-height) / 10);
  --switch-thumb-size: calc(var(--switch-height) - var(--switch-border) * 2);
  --switch-width-inside: calc(var(--switch-width) - var(--switch-border) * 2);

  cursor: pointer;
  position: relative;
  display: block;
  box-sizing: border-box;
  width: var(--switch-width);
  height: var(--switch-height);
  border: var(--switch-border) solid var(--switch-bg-color);
  border-radius: var(--switch-height);
  background-color: var(--switch-bg-color);
  margin: var(--switch-margin) 0;
  transition: 300ms 100ms;

  &:before {
    content: '';
    background-color: var(--switch-thumb-color);
    height: var(--switch-thumb-size);
    width: var(--switch-thumb-size);
    border-radius: var(--switch-thumb-size);
    position: absolute;
    top: 0;
    left: 0;
    transition: width 250ms ease;
  }

  &:active:before {
    width: 80%;
  }
}

.radio-chip[type="radio"] {
  @include flex-row();
  @include remove-appearance();
  
  position: relative;
  margin: 0.5rem 0;
  transition: transform 250ms ease;

  &:checked, &:not(:checked) {
    position: absolute;
    left: -9999px;
  }

  &:checked + label, &:not(:checked) + label {
    cursor: pointer;
    display: inline-block;
    position: relative;
    line-height: 20px;
    padding: 0.5rem 1rem 0.5rem 2.25rem;
    margin: 0.5rem 0rem 0 0;
    border-radius: 0.25rem;
    border: 1px solid col(accent-washed);
    color: col(text-darkest);
  }

  &:checked + label {
    background-color: col(accent-washed);
  }
  &:not(:checked) + label {
    background-color: col(accent-transparent);
  }

  &:checked + label:before, &:not(:checked) + label:before {
    @include fontawesome-icon();

    content: '';
    cursor: inherit;
    pointer-events: inherit;
    position: absolute;
    top: 50%;
    left: 0.75rem;
    width: 1rem;
    height: 1rem;
    color: col(text-darkest);
    background-color: col(accent-transparent);
    transform: translateY(-75%);
    -webkit-transform: translateY(-75%);
  }

  &.table-view:checked + label:before, &.table-view:not(:checked) + label:before {
    content: '\f03a';
  }

  &.component-view:checked + label:before, &.component-view:not(:checked) + label:before {
    content: '\f126';
  }

  &:hover + label {
    transform: translateY(-2px);
    -webkit-transform: translateY(-2px);
  }

  &:disabled + label {
    opacity: 0.5;
  }
}

/// Ontology/Eletree style
///   @desc Ontology selector and its eletree style(s)
[class^="eletree_icon-"],
[class*=" eletree_icon-"] {
  @include fontawesome-icon();
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Tree style */
.eletree_icon-dropdown_bottom:before {
  content: '\f0d7';
}

.eletree_icon-dropdown_right:before {
  content: '\f0da';
}

/* Checkbox style */
.eletree_icon-check_full:before {
  content: '\f14a';
}

.eletree_icon-check_half:before {
  content: '\f146';
}

.eletree_icon-check_none:before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  border: 1px solid col(accent-washed);
  background: col(bg);
  border-radius: 0.2rem;
  transition: all 250ms ease;
}

/* Loading style */
.eletree_icon-loading1:before {
  content: '\f110';
}
