# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2020-04-01 18:39

import django.contrib.postgres.fields.jsonb
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo_path', models.CharField(max_length=250)),
                ('css_path',
                 models.CharField(blank=True, max_length=250, null=True)),
                ('website',
                 models.URLField(blank=True, max_length=1000, null=True)),
                ('groups',
                 models.ManyToManyField(related_name='brand_groups',
                                        to='auth.Group')),
                ('owner',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='brand_owner',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name', ),
            },
        ),
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=510)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='CodeList',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(max_length=250)),
                ('sql_rules',
                 models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CodeRegex',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('regex_type',
                 models.IntegerField(
                     choices=[(1, b'simple (% only)'), (2, b'POSIX regex')])),
                ('regex_code',
                 models.CharField(blank=True, max_length=1000, null=True)),
                ('column_search',
                 models.IntegerField(blank=True,
                                     choices=[(1, b'code'),
                                              (2, b'description')],
                                     null=True)),
                ('sql_rules',
                 models.CharField(blank=True, max_length=1000, null=True)),
                ('case_sensitive_search',
                 models.NullBooleanField(default=False)),
                ('code_list',
                 models.ForeignKey(blank=True,
                                   null=True,
                                   on_delete=django.db.models.deletion.CASCADE,
                                   to='clinicalcode.CodeList')),
            ],
        ),
        migrations.CreateModel(
            name='CodingSystem',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('link', models.CharField(max_length=2083)),
                ('database_connection_name', models.CharField(max_length=250)),
                ('table_name', models.CharField(max_length=250)),
                ('code_column_name', models.CharField(max_length=250)),
                ('desc_column_name', models.CharField(max_length=250)),
                ('filter',
                 models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CodingSystemFilter',
            fields=[
                ('coding_system_filter_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('id', models.CharField(max_length=50)),
                ('label', models.CharField(max_length=50)),
                ('type',
                 models.CharField(choices=[(b'string', b'string'),
                                           (b'integer', b'integer'),
                                           (b'double', b'double'),
                                           (b'date', b'date'),
                                           (b'time', b'time'),
                                           (b'datetime', b'datetime'),
                                           (b'boolean', b'boolean')],
                                  max_length=20)),
                ('coding_system',
                 models.ForeignKey(blank=True,
                                   null=True,
                                   on_delete=django.db.models.deletion.CASCADE,
                                   to='clinicalcode.CodingSystem')),
            ],
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
                ('component_type',
                 models.IntegerField(choices=[(
                     1, b'Concept'), (2, b'Query Builder'), (
                         3, b'Expression'), (4, b'Select/Import')])),
                ('logical_type',
                 models.IntegerField(choices=[(1, b'Add codes'),
                                              (2, b'Remove codes')],
                                     default=1)),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'ordering': ('created', ),
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1000)),
                ('author', models.CharField(max_length=250)),
                ('entry_date', models.DateField()),
                ('validation_performed', models.NullBooleanField()),
                ('validation_description', models.CharField(max_length=1000)),
                ('publication_doi', models.CharField(max_length=100)),
                ('publication_link', models.URLField(max_length=1000)),
                ('secondary_publication_links',
                 models.CharField(blank=True, max_length=1000, null=True)),
                ('paper_published', models.NullBooleanField()),
                ('source_reference', models.CharField(max_length=250)),
                ('citation_requirements', models.CharField(max_length=250)),
                ('is_deleted', models.NullBooleanField()),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('owner_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=3)),
                ('group_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=1)),
                ('world_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=1)),
                ('coding_system',
                 models.ForeignKey(blank=True,
                                   null=True,
                                   on_delete=django.db.models.deletion.CASCADE,
                                   related_name='concepts',
                                   to='clinicalcode.CodingSystem')),
                ('created_by',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='concepts_created',
                     to=settings.AUTH_USER_MODEL)),
                ('deleted_by',
                 models.ForeignKey(null=True,
                                   on_delete=django.db.models.deletion.CASCADE,
                                   related_name='concepts_deleted',
                                   to=settings.AUTH_USER_MODEL)),
                ('group',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     to='auth.Group')),
                ('modified_by',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='concepts_modified',
                     to=settings.AUTH_USER_MODEL)),
                ('owner',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='concepts_owned',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name', ),
            },
        ),
        migrations.CreateModel(
            name='ConceptTagMap',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('concept',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   to='clinicalcode.Concept')),
                ('created_by',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='concepttagmaps_created',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalBrand',
            fields=[
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('name', models.CharField(db_index=True, max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo_path', models.CharField(max_length=250)),
                ('css_path',
                 models.CharField(blank=True, max_length=250, null=True)),
                ('website',
                 models.URLField(blank=True, max_length=1000, null=True)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('history_user',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('owner',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical brand',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCode',
            fields=[
                ('id',
                 models.IntegerField(auto_created=True,
                                     blank=True,
                                     db_index=True,
                                     verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=510)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('code_list',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to='clinicalcode.CodeList')),
                ('history_user',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical code',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCodeList',
            fields=[
                ('id',
                 models.IntegerField(auto_created=True,
                                     blank=True,
                                     db_index=True,
                                     verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('description', models.CharField(max_length=250)),
                ('sql_rules',
                 models.CharField(blank=True, max_length=1000, null=True)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('component',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to='clinicalcode.Component')),
                ('history_user',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical code list',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCodeRegex',
            fields=[
                ('id',
                 models.IntegerField(auto_created=True,
                                     blank=True,
                                     db_index=True,
                                     verbose_name='ID')),
                ('regex_type',
                 models.IntegerField(
                     choices=[(1, b'simple (% only)'), (2, b'POSIX regex')])),
                ('regex_code',
                 models.CharField(blank=True, max_length=1000, null=True)),
                ('column_search',
                 models.IntegerField(blank=True,
                                     choices=[(1, b'code'),
                                              (2, b'description')],
                                     null=True)),
                ('sql_rules',
                 models.CharField(blank=True, max_length=1000, null=True)),
                ('case_sensitive_search',
                 models.NullBooleanField(default=False)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('code_list',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to='clinicalcode.CodeList')),
                ('component',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to='clinicalcode.Component')),
                ('history_user',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical code regex',
            },
        ),
        migrations.CreateModel(
            name='HistoricalCodingSystem',
            fields=[
                ('id',
                 models.IntegerField(auto_created=True,
                                     blank=True,
                                     db_index=True,
                                     verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('link', models.CharField(max_length=2083)),
                ('database_connection_name', models.CharField(max_length=250)),
                ('table_name', models.CharField(max_length=250)),
                ('code_column_name', models.CharField(max_length=250)),
                ('desc_column_name', models.CharField(max_length=250)),
                ('filter',
                 models.CharField(blank=True, max_length=1000, null=True)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('history_user',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical coding system',
            },
        ),
        migrations.CreateModel(
            name='HistoricalComponent',
            fields=[
                ('id',
                 models.IntegerField(auto_created=True,
                                     blank=True,
                                     db_index=True,
                                     verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('comment', models.TextField()),
                ('component_type',
                 models.IntegerField(choices=[(
                     1, b'Concept'), (2, b'Query Builder'), (
                         3, b'Expression'), (4, b'Select/Import')])),
                ('logical_type',
                 models.IntegerField(choices=[(1, b'Add codes'),
                                              (2, b'Remove codes')],
                                     default=1)),
                ('name', models.CharField(max_length=250)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('concept',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to='clinicalcode.Concept')),
                ('concept_ref',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to='clinicalcode.Concept')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical component',
            },
        ),
        migrations.CreateModel(
            name='HistoricalConcept',
            fields=[
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1000)),
                ('author', models.CharField(max_length=250)),
                ('entry_date', models.DateField()),
                ('validation_performed', models.NullBooleanField()),
                ('validation_description', models.CharField(max_length=1000)),
                ('publication_doi', models.CharField(max_length=100)),
                ('publication_link', models.URLField(max_length=1000)),
                ('secondary_publication_links',
                 models.CharField(blank=True, max_length=1000, null=True)),
                ('paper_published', models.NullBooleanField()),
                ('source_reference', models.CharField(max_length=250)),
                ('citation_requirements', models.CharField(max_length=250)),
                ('is_deleted', models.NullBooleanField()),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('owner_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=3)),
                ('group_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=1)),
                ('world_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=1)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('coding_system',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to='clinicalcode.CodingSystem')),
                ('created_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('deleted_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('group',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to='auth.Group')),
                ('history_user',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('modified_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('owner',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical concept',
            },
        ),
        migrations.CreateModel(
            name='HistoricalConceptTagMap',
            fields=[
                ('id',
                 models.IntegerField(auto_created=True,
                                     blank=True,
                                     db_index=True,
                                     verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('concept',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to='clinicalcode.Concept')),
                ('created_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('history_user',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical concept tag map',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTag',
            fields=[
                ('id',
                 models.IntegerField(auto_created=True,
                                     blank=True,
                                     db_index=True,
                                     verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('description', models.CharField(max_length=50)),
                ('display',
                 models.IntegerField(choices=[(1, b'default'), (2, b'primary'),
                                              (3, b'success'), (4, b'info'),
                                              (5, b'warning'), (6, b'danger')],
                                     default=1)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('created_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('history_user',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('updated_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical tag',
            },
        ),
        migrations.CreateModel(
            name='HistoricalWorkingSet',
            fields=[
                ('id',
                 models.IntegerField(auto_created=True,
                                     blank=True,
                                     db_index=True,
                                     verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('name', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=100)),
                ('publication', models.CharField(max_length=1000)),
                ('description', models.CharField(max_length=1000)),
                ('concept_informations',
                 django.contrib.postgres.fields.jsonb.JSONField()),
                ('concept_version',
                 django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('publication_doi', models.CharField(max_length=100)),
                ('publication_link', models.URLField(max_length=1000)),
                ('secondary_publication_links',
                 models.CharField(blank=True, max_length=1000, null=True)),
                ('source_reference', models.CharField(max_length=250)),
                ('citation_requirements', models.CharField(max_length=250)),
                ('is_deleted', models.NullBooleanField()),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('owner_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=3)),
                ('group_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=1)),
                ('world_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=1)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('created_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('deleted_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('group',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to='auth.Group')),
                ('history_user',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('owner',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('updated_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical working set',
            },
        ),
        migrations.CreateModel(
            name='HistoricalWorkingSetTagMap',
            fields=[
                ('id',
                 models.IntegerField(auto_created=True,
                                     blank=True,
                                     db_index=True,
                                     verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('created_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('history_user',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical working set tag map',
            },
        ),
        migrations.CreateModel(
            name='ICD10_CODES_AND_TITLES_AND_METADATA',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=6,
                                          null=True)),
                ('alt_code',
                 models.CharField(blank=True, max_length=5, null=True)),
                ('usage', models.CharField(blank=True, max_length=8,
                                           null=True)),
                ('usage_uk', models.BigIntegerField(blank=True, null=True)),
                ('description',
                 models.CharField(blank=True, max_length=255, null=True)),
                ('modifier_4',
                 models.CharField(blank=True, max_length=255, null=True)),
                ('modifier_5',
                 models.CharField(blank=True, max_length=255, null=True)),
                ('qualifiers',
                 models.CharField(blank=True, max_length=255, null=True)),
                ('gender_mask', models.BigIntegerField(blank=True, null=True)),
                ('min_age', models.BigIntegerField(blank=True, null=True)),
                ('max_age', models.BigIntegerField(blank=True, null=True)),
                ('tree_description',
                 models.CharField(blank=True, max_length=255, null=True)),
                ('chapter_number', models.BigIntegerField(blank=True,
                                                          null=True)),
                ('chapter_code',
                 models.CharField(blank=True, max_length=5, null=True)),
                ('chapter_description',
                 models.CharField(blank=True, max_length=255, null=True)),
                ('category_1_code',
                 models.CharField(blank=True, max_length=7, null=True)),
                ('category_1_description',
                 models.CharField(blank=True, max_length=255, null=True)),
                ('category_2_code',
                 models.CharField(blank=True, max_length=7, null=True)),
                ('category_2_description',
                 models.CharField(blank=True, max_length=255, null=True)),
                ('category_3_code',
                 models.CharField(blank=True, max_length=7, null=True)),
                ('category_3_description',
                 models.CharField(blank=True, max_length=255, null=True)),
                ('icd_version',
                 models.CharField(blank=True, max_length=50, null=True)),
                ('import_date', models.DateTimeField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('effective_from', models.DateTimeField(blank=True,
                                                        null=True)),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('avail_from_dt', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OPCS4_CODES_AND_TITLES',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('code_with_decimal',
                 models.CharField(blank=True, max_length=50, null=True)),
                ('code_without_decimal',
                 models.CharField(blank=True, max_length=50, null=True)),
                ('title',
                 models.CharField(blank=True, max_length=255, null=True)),
                ('opcs_version',
                 models.DecimalField(blank=True,
                                     decimal_places=4,
                                     max_digits=10,
                                     null=True)),
                ('import_date', models.DateField(blank=True, null=True)),
                ('created_date', models.DateField(blank=True, null=True)),
                ('effective_from', models.DateField(blank=True, null=True)),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('avail_from_dt', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('description', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PublishedConcept',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('concept_history_id', models.IntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('concept',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   to='clinicalcode.Concept')),
                ('created_by',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='publication_owner',
                     to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='READ_CD_CV2_SCD',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('read_code',
                 models.CharField(blank=True, max_length=5, null=True)),
                ('pref_term_30',
                 models.CharField(blank=True, max_length=30, null=True)),
                ('pref_term_60',
                 models.CharField(blank=True, max_length=60, null=True)),
                ('pref_term_198',
                 models.CharField(blank=True, max_length=198, null=True)),
                ('icd9_code',
                 models.CharField(blank=True, max_length=20, null=True)),
                ('icd9_code_def',
                 models.CharField(blank=True, max_length=2, null=True)),
                ('icd9_cm_code',
                 models.CharField(blank=True, max_length=20, null=True)),
                ('icd9_cm_code_def',
                 models.CharField(blank=True, max_length=2, null=True)),
                ('opcs_4_2_code',
                 models.CharField(blank=True, max_length=20, null=True)),
                ('opcs_4_2_code_def',
                 models.CharField(blank=True, max_length=2, null=True)),
                ('speciality_flag',
                 models.CharField(blank=True, max_length=10, null=True)),
                ('status_flag',
                 models.CharField(blank=True, max_length=1, null=True)),
                ('language_code',
                 models.CharField(blank=True, max_length=2, null=True)),
                ('source_file_name',
                 models.CharField(blank=True, max_length=255, null=True)),
                ('in_source_data', models.BigIntegerField(blank=True,
                                                          null=True)),
                ('import_date', models.DateTimeField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('is_latest', models.BigIntegerField(blank=True, null=True)),
                ('effective_from', models.DateTimeField(blank=True,
                                                        null=True)),
                ('effective_to', models.DateTimeField(blank=True, null=True)),
                ('avail_from_dt', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='READ_CD_CV3_TERMS_SCD',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('term_id',
                 models.CharField(blank=True, max_length=5, null=True)),
                ('term_status',
                 models.CharField(blank=True, max_length=1, null=True)),
                ('term_30',
                 models.CharField(blank=True, max_length=30, null=True)),
                ('term_60',
                 models.CharField(blank=True, max_length=60, null=True)),
                ('term_198',
                 models.CharField(blank=True, max_length=198, null=True)),
                ('in_source_data', models.BigIntegerField(blank=True,
                                                          null=True)),
                ('import_date', models.DateTimeField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('is_latest', models.BigIntegerField(blank=True, null=True)),
                ('effective_from', models.DateTimeField(blank=True,
                                                        null=True)),
                ('effective_to', models.DateTimeField(blank=True, null=True)),
                ('avail_from_dt', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(max_length=50)),
                ('display',
                 models.IntegerField(choices=[(1, b'default'), (2, b'primary'),
                                              (3, b'success'), (4, b'info'),
                                              (5, b'warning'), (6, b'danger')],
                                     default=1)),
                ('created_by',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='tags_created',
                     to=settings.AUTH_USER_MODEL)),
                ('updated_by',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='tags_updated',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkingSet',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=100)),
                ('publication', models.CharField(max_length=1000)),
                ('description', models.CharField(max_length=1000)),
                ('concept_informations',
                 django.contrib.postgres.fields.jsonb.JSONField()),
                ('concept_version',
                 django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('publication_doi', models.CharField(max_length=100)),
                ('publication_link', models.URLField(max_length=1000)),
                ('secondary_publication_links',
                 models.CharField(blank=True, max_length=1000, null=True)),
                ('source_reference', models.CharField(max_length=250)),
                ('citation_requirements', models.CharField(max_length=250)),
                ('is_deleted', models.NullBooleanField()),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('owner_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=3)),
                ('group_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=1)),
                ('world_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=1)),
                ('created_by',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='working_set_created',
                     to=settings.AUTH_USER_MODEL)),
                ('deleted_by',
                 models.ForeignKey(null=True,
                                   on_delete=django.db.models.deletion.CASCADE,
                                   related_name='working_set_deleted',
                                   to=settings.AUTH_USER_MODEL)),
                ('group',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     to='auth.Group')),
                ('owner',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='working_set_owned',
                     to=settings.AUTH_USER_MODEL)),
                ('updated_by',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='working_set_updated',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name', ),
            },
        ),
        migrations.CreateModel(
            name='WorkingSetTagMap',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('created_by',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='workingsettagmaps_created',
                     to=settings.AUTH_USER_MODEL)),
                ('tag',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   to='clinicalcode.Tag')),
                ('workingset',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   to='clinicalcode.WorkingSet')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='historicalworkingsettagmap',
            name='tag',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='clinicalcode.Tag'),
        ),
        migrations.AddField(
            model_name='historicalworkingsettagmap',
            name='workingset',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='clinicalcode.WorkingSet'),
        ),
        migrations.AddField(
            model_name='historicalconcepttagmap',
            name='tag',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='clinicalcode.Tag'),
        ),
        migrations.AddField(
            model_name='historicalcomponent',
            name='concept_ref_history',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='clinicalcode.HistoricalConcept'),
        ),
        migrations.AddField(
            model_name='historicalcomponent',
            name='created_by',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcomponent',
            name='history_user',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='+',
                to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcomponent',
            name='modified_by',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='concepttagmap',
            name='tag',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to='clinicalcode.Tag'),
        ),
        migrations.AddField(
            model_name='component',
            name='concept',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='clinicalcode.Concept'),
        ),
        migrations.AddField(
            model_name='component',
            name='concept_ref',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='concept_ref',
                to='clinicalcode.Concept'),
        ),
        migrations.AddField(
            model_name='component',
            name='concept_ref_history',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='+',
                to='clinicalcode.HistoricalConcept'),
        ),
        migrations.AddField(
            model_name='component',
            name='created_by',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='components_created',
                to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='component',
            name='modified_by',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='components_modified',
                to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='codingsystemfilter',
            name='operators',
            field=models.ManyToManyField(to='clinicalcode.Operator'),
        ),
        migrations.AddField(
            model_name='coderegex',
            name='component',
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='clinicalcode.Component'),
        ),
        migrations.AddField(
            model_name='codelist',
            name='component',
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='clinicalcode.Component'),
        ),
        migrations.AddField(
            model_name='code',
            name='code_list',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='codes',
                to='clinicalcode.CodeList'),
        ),
        migrations.AlterUniqueTogether(
            name='publishedconcept',
            unique_together=set([('concept', 'concept_history_id')]),
        ),
    ]
