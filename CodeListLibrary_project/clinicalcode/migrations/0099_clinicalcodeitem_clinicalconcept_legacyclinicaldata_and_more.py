# Generated by Django 4.0.10 on 2023-04-26 20:01

import clinicalcode.entity_utils.constants
import clinicalcode.mixins.DeltaMixin
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('clinicalcode', '0098_brand_footer_images_historicalbrand_footer_images'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClinicalCodeItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributes', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=250), blank=True, null=True, size=None)),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinicalcode.code')),
            ],
        ),
        migrations.CreateModel(
            name='ClinicalConcept',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('entity_id', models.BigIntegerField(db_index=True, editable=False)),
                ('version_id', models.BigIntegerField(db_index=True, default=1, editable=False)),
                ('version_date', models.DateTimeField(blank=True, db_index=True, default=django.utils.timezone.now, editable=False)),
                ('created_date', models.DateTimeField(blank=True, db_index=True, default=django.utils.timezone.now, editable=False)),
                ('change_reason', models.TextField(blank=True, null=True)),
                ('change_type', models.IntegerField(choices=[('CREATED', 1), ('EDITED', 2), ('DELETED', 3)], default=clinicalcode.entity_utils.constants.HISTORICAL_CHANGE_TYPE['CREATED'])),
                ('name', models.CharField(max_length=250)),
                ('code_attribute_header', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('coding_system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coded_concepts', to='clinicalcode.codingsystem')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_concepts', to='clinicalcode.genericentity')),
                ('root_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forked_concepts', to='clinicalcode.clinicalconcept')),
            ],
            options={
                'ordering': ('name',),
            },
            bases=(models.Model, clinicalcode.mixins.DeltaMixin.DeltaModelMixin),
        ),
        migrations.CreateModel(
            name='LegacyClinicalData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('entry_date', models.DateField()),
                ('author', models.CharField(max_length=1000)),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('collections', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('validation_performed', models.BooleanField(default=False, null=True)),
                ('validation_description', models.TextField(blank=True, null=True)),
                ('publication_doi', models.CharField(max_length=100)),
                ('publication_link', models.URLField(max_length=1000)),
                ('secondary_publication_links', models.TextField(blank=True, null=True)),
                ('paper_published', models.BooleanField(default=False, null=True)),
                ('source_reference', models.CharField(max_length=250)),
                ('citation_requirements', models.TextField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='legacy_details', to='clinicalcode.clinicalconcept')),
            ],
        ),
        migrations.CreateModel(
            name='ContentPermission',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('world_access', models.IntegerField(choices=[('NONE', 1), ('VIEW', 2), ('EDIT', 3)], default=clinicalcode.entity_utils.constants.GROUP_PERMISSIONS['NONE'])),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.group')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ClinicalRuleset',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('source_type', models.IntegerField(choices=[('CONCEPT', 1), ('QUERY_BUILDER', 2), ('EXPRESSION', 3), ('SELECT_IMPORT', 4), ('FILE_IMPORT', 5), ('SEARCH_TERM', 6)], default=clinicalcode.entity_utils.constants.CLINICAL_CODE_SOURCE['SEARCH_TERM'])),
                ('logical_type', models.IntegerField(choices=[('INCLUDE', 1), ('EXCLUDE', 2)], default=clinicalcode.entity_utils.constants.CLINICAL_RULE_TYPE['INCLUDE'])),
                ('codes', models.ManyToManyField(blank=True, related_name='rulesets', through='clinicalcode.ClinicalCodeItem', to='clinicalcode.code')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='clinicalconcept',
            name='rulesets',
            field=models.ManyToManyField(blank=True, related_name='parent_concepts', to='clinicalcode.clinicalruleset'),
        ),
        migrations.AddField(
            model_name='clinicalcodeitem',
            name='ruleset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinicalcode.clinicalruleset'),
        ),
        migrations.AddField(
            model_name='genericentity',
            name='permissions',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='permitted_entities', to='clinicalcode.contentpermission'),
        ),
        migrations.AddField(
            model_name='historicalgenericentity',
            name='permissions',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='clinicalcode.contentpermission'),
        ),
    ]
