# Generated by Django 4.1.10 on 2024-09-23 15:27

import datetime
import django.contrib.postgres.fields
import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('clinicalcode', '0113_drop_ontology'),
    ]

    operations = [
        migrations.CreateModel(
            name='OntologyTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('type_id', models.IntegerField(choices=[('CLINICAL_DISEASE', 0), ('CLINICAL_DOMAIN', 1), ('CLINICAL_FUNCTIONAL_ANATOMY', 2)])),
                ('properties', models.JSONField(blank=True, null=True)),
                ('reference_id', models.IntegerField(blank=True, null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('synonyms_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
                ('relation_vector', django.contrib.postgres.search.SearchVectorField(null=True)),
            ],
            options={
                'ordering': ('type_id', 'id'),
            },
        ),
        migrations.CreateModel(
            name='OntologyTagEdge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.RemoveField(
            model_name='snomed_codes',
            name='avail_from_dt',
        ),
        migrations.RemoveField(
            model_name='snomed_codes',
            name='created_date',
        ),
        migrations.RemoveField(
            model_name='snomed_codes',
            name='effective_from',
        ),
        migrations.RemoveField(
            model_name='snomed_codes',
            name='effective_to',
        ),
        migrations.RemoveField(
            model_name='snomed_codes',
            name='import_date',
        ),
        migrations.RemoveField(
            model_name='snomed_codes',
            name='version',
        ),
        migrations.AddField(
            model_name='snomed_codes',
            name='active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='snomed_codes',
            name='case_sig',
            field=models.IntegerField(choices=[('CL', 0), ('CI', 1), ('CS', 2)], default=1),
        ),
        migrations.AddField(
            model_name='snomed_codes',
            name='effective_time',
            field=models.DateField(default=datetime.date.today),
        ),
        migrations.AddField(
            model_name='snomed_codes',
            name='mesh_codes',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='snomed_codes',
            name='opcs4_codes',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='snomed_codes',
            name='icd9_codes',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='snomed_codes',
            name='icd10_codes',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='snomed_codes',
            name='readcv2_codes',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='snomed_codes',
            name='readcv3_codes',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='snomed_codes',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddField(
            model_name='snomed_codes',
            name='synonyms_vector',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddField(
            model_name='snomed_codes',
            name='relation_vector',
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AlterField(
            model_name='snomed_codes',
            name='code',
            field=models.CharField(blank=True, default='', max_length=18, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='snomed_codes',
            name='description',
            field=models.CharField(blank=True, default='', max_length=256, null=True),
        ),
        migrations.AlterField(
            model_name='snomed_codes',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False),
        ),
        migrations.AddIndex(
            model_name='snomed_codes',
            index=django.contrib.postgres.indexes.GinIndex(fields=['code'], name='sct_cd_trgm_idx', opclasses=['gin_trgm_ops']),
        ),
        migrations.AddIndex(
            model_name='snomed_codes',
            index=django.contrib.postgres.indexes.GinIndex(fields=['description'], name='sct_desc_trgm_idx', opclasses=['gin_trgm_ops']),
        ),
        migrations.AddIndex(
            model_name='snomed_codes',
            index=django.contrib.postgres.indexes.GinIndex(fields=['mesh_codes'], name='sct_mesh_txt_idx', opclasses=['array_ops']),
        ),
        migrations.AddIndex(
            model_name='snomed_codes',
            index=django.contrib.postgres.indexes.GinIndex(fields=['opcs4_codes'], name='sct_opcs_txt_idx', opclasses=['array_ops']),
        ),
        migrations.AddIndex(
            model_name='snomed_codes',
            index=django.contrib.postgres.indexes.GinIndex(fields=['icd9_codes'], name='sct_icd9_txt_idx', opclasses=['array_ops']),
        ),
        migrations.AddIndex(
            model_name='snomed_codes',
            index=django.contrib.postgres.indexes.GinIndex(fields=['icd10_codes'], name='sct_icd10_txt_idx', opclasses=['array_ops']),
        ),
        migrations.AddIndex(
            model_name='snomed_codes',
            index=django.contrib.postgres.indexes.GinIndex(fields=['readcv2_codes'], name='sct_cv2_txt_idx', opclasses=['array_ops']),
        ),
        migrations.AddIndex(
            model_name='snomed_codes',
            index=django.contrib.postgres.indexes.GinIndex(fields=['readcv3_codes'], name='sct_cv3_txt_idx', opclasses=['array_ops']),
        ),
        migrations.AddIndex(
            model_name='snomed_codes',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='sct_sv_gin_idx'),
        ),
        migrations.AddIndex(
            model_name='snomed_codes',
            index=django.contrib.postgres.indexes.GinIndex(fields=['synonyms_vector'], name='sct_syn_gin_idx'),
        ),
        migrations.AddIndex(
            model_name='snomed_codes',
            index=django.contrib.postgres.indexes.GinIndex(fields=['relation_vector'], name='sct_rel_gin_idx'),
        ),
        migrations.AddField(
            model_name='ontologytagedge',
            name='child',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_edges', to='clinicalcode.ontologytag'),
        ),
        migrations.AddField(
            model_name='ontologytagedge',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children_edges', to='clinicalcode.ontologytag'),
        ),
        migrations.AddField(
            model_name='ontologytag',
            name='children',
            field=models.ManyToManyField(blank=True, related_name='parents', through='clinicalcode.OntologyTagEdge', to='clinicalcode.ontologytag'),
        ),
        migrations.AlterUniqueTogether(
            name='ontologytagedge',
            unique_together={('child_id', 'parent_id')},
        ),
        migrations.AddIndex(
            model_name='ontologytag',
            index=models.Index(fields=['id'], name='clinicalcod_id_c1386a_idx'),
        ),
        migrations.AddIndex(
            model_name='ontologytag',
            index=models.Index(fields=['reference_id'], name='clinicalcod_referen_b26caf_idx'),
        ),
        migrations.AddIndex(
            model_name='ontologytag',
            index=models.Index(fields=['id', 'type_id'], name='clinicalcod_id_d32433_idx'),
        ),
        migrations.AddIndex(
            model_name='ontologytag',
            index=models.Index(fields=['id', 'reference_id'], name='clinicalcod_id_7584d4_idx'),
        ),
        migrations.AddIndex(
            model_name='ontologytag',
            index=models.Index(fields=['id', 'type_id', 'reference_id'], name='clinicalcod_id_b41ffe_idx'),
        ),
        migrations.AddIndex(
            model_name='ontologytag',
            index=django.contrib.postgres.indexes.GinIndex(fields=['name'], name='ot_name_gin_idx', opclasses=['gin_trgm_ops']),
        ),
        migrations.AddIndex(
            model_name='ontologytag',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='clinicalcod_search__2a66db_gin'),
        ),
        migrations.AddIndex(
            model_name='ontologytag',
            index=django.contrib.postgres.indexes.GinIndex(fields=['synonyms_vector'], name='clinicalcod_synonym_0251f3_gin'),
        ),
        migrations.AddIndex(
            model_name='ontologytag',
            index=django.contrib.postgres.indexes.GinIndex(fields=['relation_vector'], name='clinicalcod_relatio_da4939_gin'),
        ),
        migrations.AddIndex(
            model_name='ontologytag',
            index=django.contrib.postgres.indexes.GinIndex(fields=['properties'], name='clinicalcod_propert_1c7b9b_gin'),
        ),
    ]
