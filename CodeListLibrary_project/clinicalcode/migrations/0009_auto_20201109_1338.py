# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2020-11-09 13:38

import django.contrib.postgres.fields.jsonb
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('clinicalcode', '0008_auto_20200408_1250'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=500)),
                ('uid', models.CharField(max_length=250)),
                ('url', models.CharField(max_length=500)),
                ('description', models.CharField(max_length=500)),
                ('created_by',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='data_source_created',
                     to=settings.AUTH_USER_MODEL)),
                ('updated_by',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='data_source_updated',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalDataSource',
            fields=[
                ('id',
                 models.IntegerField(auto_created=True,
                                     blank=True,
                                     db_index=True,
                                     verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('name', models.CharField(max_length=500)),
                ('uid', models.CharField(max_length=250)),
                ('url', models.CharField(max_length=500)),
                ('description', models.CharField(max_length=500)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('created_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('history_user',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('updated_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical data source',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhenotype',
            fields=[
                ('id',
                 models.IntegerField(auto_created=True,
                                     blank=True,
                                     db_index=True,
                                     verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('title', models.CharField(max_length=250)),
                ('name', models.CharField(max_length=250)),
                ('layout', models.CharField(max_length=250)),
                ('phenotype_id', models.CharField(max_length=250)),
                ('type', models.CharField(max_length=250)),
                ('validation', models.CharField(max_length=250)),
                ('valid_event_data_range_start', models.DateField()),
                ('valid_event_data_range_end', models.DateField()),
                ('sex', models.CharField(max_length=50)),
                ('author', models.CharField(max_length=250)),
                ('status', models.CharField(max_length=50)),
                ('hdr_created_date', models.DateField()),
                ('hdr_modified_date', models.DateField()),
                ('description', models.TextField()),
                ('concept_informations',
                 django.contrib.postgres.fields.jsonb.JSONField()),
                ('publication_doi', models.CharField(max_length=100)),
                ('publication_link', models.URLField(max_length=1000)),
                ('secondary_publication_links',
                 models.CharField(blank=True, max_length=3000, null=True)),
                ('source_reference', models.CharField(max_length=250)),
                ('citation_requirements', models.CharField(max_length=250)),
                ('is_deleted', models.NullBooleanField()),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('owner_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=3)),
                ('group_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=1)),
                ('world_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=1)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('created_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('deleted_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('group',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to='auth.Group')),
                ('history_user',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('owner',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('updated_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical phenotype',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPhenotypeTagMap',
            fields=[
                ('id',
                 models.IntegerField(auto_created=True,
                                     blank=True,
                                     db_index=True,
                                     verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('modified', models.DateTimeField(blank=True, editable=False)),
                ('history_id',
                 models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason',
                 models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'),
                                           ('-', 'Deleted')],
                                  max_length=1)),
                ('created_by',
                 models.ForeignKey(
                     blank=True,
                     db_constraint=False,
                     null=True,
                     on_delete=django.db.models.deletion.DO_NOTHING,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
                ('history_user',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='+',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical phenotype tag map',
            },
        ),
        migrations.CreateModel(
            name='Phenotype',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=250)),
                ('name', models.CharField(max_length=250)),
                ('layout', models.CharField(max_length=250)),
                ('phenotype_id', models.CharField(max_length=250)),
                ('type', models.CharField(max_length=250)),
                ('validation', models.CharField(max_length=250)),
                ('valid_event_data_range_start', models.DateField()),
                ('valid_event_data_range_end', models.DateField()),
                ('sex', models.CharField(max_length=50)),
                ('author', models.CharField(max_length=250)),
                ('status', models.CharField(max_length=50)),
                ('hdr_created_date', models.DateField()),
                ('hdr_modified_date', models.DateField()),
                ('description', models.TextField()),
                ('concept_informations',
                 django.contrib.postgres.fields.jsonb.JSONField()),
                ('publication_doi', models.CharField(max_length=100)),
                ('publication_link', models.URLField(max_length=1000)),
                ('secondary_publication_links',
                 models.CharField(blank=True, max_length=3000, null=True)),
                ('source_reference', models.CharField(max_length=250)),
                ('citation_requirements', models.CharField(max_length=250)),
                ('is_deleted', models.NullBooleanField()),
                ('deleted', models.DateTimeField(blank=True, null=True)),
                ('owner_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=3)),
                ('group_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=1)),
                ('world_access',
                 models.IntegerField(choices=[(1, b'No Access'), (2, b'View'),
                                              (3, b'Edit')],
                                     default=1)),
                ('created_by',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='phenotype_created',
                     to=settings.AUTH_USER_MODEL)),
                ('data_sources',
                 models.ManyToManyField(to='clinicalcode.DataSource')),
                ('deleted_by',
                 models.ForeignKey(null=True,
                                   on_delete=django.db.models.deletion.CASCADE,
                                   related_name='phenotype_deleted',
                                   to=settings.AUTH_USER_MODEL)),
                ('group',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     to='auth.Group')),
                ('owner',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='phenotype_owned',
                     to=settings.AUTH_USER_MODEL)),
                ('updated_by',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='phenotype_updated',
                     to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name', ),
            },
        ),
        migrations.CreateModel(
            name='PhenotypeTagMap',
            fields=[
                ('id',
                 models.AutoField(auto_created=True,
                                  primary_key=True,
                                  serialize=False,
                                  verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('created_by',
                 models.ForeignKey(
                     null=True,
                     on_delete=django.db.models.deletion.SET_NULL,
                     related_name='phenotypetagmaps_created',
                     to=settings.AUTH_USER_MODEL)),
                ('phenotype',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   to='clinicalcode.Phenotype')),
                ('tag',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                   to='clinicalcode.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='historicalphenotypetagmap',
            name='phenotype',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='clinicalcode.Phenotype'),
        ),
        migrations.AddField(
            model_name='historicalphenotypetagmap',
            name='tag',
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name='+',
                to='clinicalcode.Tag'),
        ),
    ]
