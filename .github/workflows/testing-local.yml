name: Integration-test

on:
  push:
    branches:
      - "test-master"
  pull_request:
    branches:
      - "test-master"

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Chrome Deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 \
            libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libglib2.0-0 \
            libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 \
            libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
            lsb-release wget xdg-utils

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install LDAP files
        run: |
          sudo apt-get install -y -q libsasl2-dev libldap2-dev libssl-dev

  db:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres
        env:
          POSTGRES_DB: concept_library
          POSTGRES_USER: clluser_test
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Wait for Postgres
        run: echo "Postgres is started!"
      

  prepare:
    needs: [setup, db]
    uses: actions/checkout@v3
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docker/requirements/base.txt
      - name: Prepare Selenium
        uses: nanasess/setup-chromedriver@v2
      - name: Run Browser
        run: |
          chrome --version

  ngrok-install:
    needs: [setup, db]
    runs-on: ubuntu-latest
    steps:
    - name: Install ngrok
      run: |
        wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
        unzip ngrok-stable-linux-amd64.zip
        chmod +x ngrok
        ./ngrok authtoken 2Xtpxu8S2cLvqyEV2hVMzT6AlJr_5z7VkibbKDY1N8uUHQy2E
        ./ngrok http 8000
      env:
        NGROK_AUTH_TOKEN: 2Xtpxu8S2cLvqyEV2hVMzT6AlJr_5z7VkibbKDY1N8uUHQy2E
      

  chromedriver:
    needs: [setup, db]
    runs-on: ubuntu-latest
    steps:
      - name: Run chromedriver
        run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional

  run-tests:
    needs: [setup, db, prepare, chromedriver]
    runs-on: ubuntu-latest
    steps:
      - name: Run tests
        run: |
          export $(grep -v '^#' docker/selenium-testing/env/remotetest.compose.env | xargs)
          cd CodeListLibrary_project
          pytest -v -s --cov-report xml --cov .
        env:
          DISPLAY: ":99"

  coverage-report:
    needs: [run-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Coverage report
        uses: 5monkeys/cobertura-action@v13
        with:
          path: CodeListLibrary_project/coverage.xml
          minimum_coverage: 25
